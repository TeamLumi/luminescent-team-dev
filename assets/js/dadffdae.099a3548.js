"use strict";(self.webpackChunkluminescent_team=self.webpackChunkluminescent_team||[]).push([[10431],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),p=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(m.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,f=u["".concat(m,".").concat(d)]||u[d]||s[d]||i;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},60556:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={},l="(769) _AC_DOWN",o={unversionedId:"scripting/animation-commands/ac-down",id:"scripting/animation-commands/ac-down",title:"(769) _AC_DOWN",description:"Effect",source:"@site/rom-hacking/scripting/animation-commands/769-ac-down.md",sourceDirName:"scripting/animation-commands",slug:"/scripting/animation-commands/ac-down",permalink:"/luminescent-team-dev/rom-hacking/scripting/animation-commands/ac-down",draft:!1,tags:[],version:"current",sidebarPosition:769,frontMatter:{},sidebar:"ROMHackingSidebar",previous:{title:"(768) _AC_UP",permalink:"/luminescent-team-dev/rom-hacking/scripting/animation-commands/ac-up"},next:{title:"(770) _AC_LEFT",permalink:"/luminescent-team-dev/rom-hacking/scripting/animation-commands/ac-left"}},m={},p=[{value:"Effect",id:"effect",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2}],c={toc:p},u="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"769-_ac_down"},"(769) _AC_DOWN"),(0,r.kt)("h2",{id:"effect"},"Effect"),(0,r.kt)("p",null,"Moves the entity of the animation down over a given amount of frames per tile."),(0,r.kt)("p",null,"If the ",(0,r.kt)("strong",{parentName:"p"},"frames")," argument is negative, 16 is used."),(0,r.kt)("p",null,"If the ",(0,r.kt)("strong",{parentName:"p"},"idle_animation")," argument is provided, the entity will move while in its idle animation."),(0,r.kt)("p",null,"Starts the stepping sound effect."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This command only moves the entity. It does not turn the entity in the moving direction.")),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"_AC_DOWN(tiles, time, idle_animation?)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Types"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"tiles")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of tiles"),(0,r.kt)("td",{parentName:"tr",align:null},"Float"),(0,r.kt)("td",{parentName:"tr",align:null},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"time")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of time to move per tile, in frames"),(0,r.kt)("td",{parentName:"tr",align:null},"Float"),(0,r.kt)("td",{parentName:"tr",align:null},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"idle_animation")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to use the idle animation"),(0,r.kt)("td",{parentName:"tr",align:null},"Any"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional")))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"anm_dummy:\n_AC_DIR_D(8)\n_AC_DOWN(3, 8)\n_ACMD_END()\n")),(0,r.kt)("p",null,"The above script will turn the entity down and then move it down 3 tiles over 8 frames per tile."))}s.isMDXComponent=!0}}]);